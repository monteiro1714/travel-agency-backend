# services:
#   backend:
#     build: .
#     container_name: nestjs_backend
#     ports:
#       - "3000:3000"
#     environment:
#       - NODE_ENV=development
#       - DB_HOST=postgres # Nome do serviÃ§o no Docker Compose
#       - DB_PORT=5432
#       - DB_USER=${DB_USER}
#       - DB_PASSWORD=${DB_PASSWORD}
#       - DB_NAME=${DB_NAME}
#     depends_on:
#       postgres:
#         condition: service_healthy
#     restart: unless-stopped
#     networks: # ðŸ‘ˆ Adicione esta seÃ§Ã£o
#       - app_network

#   postgres:
#     image: postgres:17
#     container_name: postgres_db
#     environment:
#       POSTGRES_USER: ${DB_USER}
#       POSTGRES_PASSWORD: ${DB_PASSWORD}
#       POSTGRES_DB: ${DB_NAME}
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
#       interval: 5s
#       timeout: 5s
#       retries: 10 # ðŸ‘ˆ Aumente as tentativas
#     restart: unless-stopped
#     networks: # ðŸ‘ˆ Adicione esta seÃ§Ã£o
#       - app_network

# volumes:
#   postgres_data:

# networks: # ðŸ‘ˆ Defina uma rede personalizada
#   app_network:
#     driver: bridge